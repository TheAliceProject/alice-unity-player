class SCamera extends SMovableTurnable {
  SCamera() {
    $SceneGraph.createCameraEntity(camera: this);
    $SceneGraph.bindTransformationProperty(owner: this, property: this.localTransformation, value: this.localTransformation.getValue());
  }

  void setVehicle(SThing vehicle) {
    this.vehicle <- vehicle;
    localTransformation.value <- $SceneGraph.setVehicle(vehicle: vehicle, rider: this);
  }

//  void moveAndOrientToAGoodVantagePointOf(SThing entity,
//          DecimalNumber duration <- Default.duration(),
//          AnimationStyle animationStyle <- Default.animationStyle() ) {
//    // checkArgumentIsNotNull( entity );
//    GoodVantagePointData data <- new GoodVantagePointData( subject: this, viewer: other );
//		this.animateVantagePoint( vantage: data, duration: duration, animationStyle: style );
//  }

//	static class GoodVantagePointData extends PreSetVantagePointData {
//		public GoodVantagePointData( SymmetricPerspectiveCameraImp subject, EntityImp other ) {
//			super( subject: subject, vantage: subject.createGoodVantagePointStandIn( other: other ) );
//		}
//	}

//	StandInImp createGoodVantagePointStandIn( EntityImp other ) {
//	  // From SymmetricPerspectiveCameraImp
//		StandInImp standIn <- other.createStandIn();
//		standIn.getSgComposite().setTranslationOnly( x: 2, y: 4, z: -8, seenBy: other.getSgReferenceFrame() );
//		standIn.setOrientationOnlyToPointAt( target: other );
//		return standIn;
//	}
}