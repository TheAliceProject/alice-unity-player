enum Epsilon {
    REASONABLE(value: 0.001),
    TINY(value: 0.000001);

    @CompletelyHidden DecimalNumber value;

    Epsilon(DecimalNumber value) {
        this.value <- value;
    }

    DecimalNumber getValue() {
        return value;
    }

    Boolean isWithin( DecimalNumber number1, DecimalNumber number2) {
        return $Math.abs(number: number1 - number2 ) < value;
    }

    Boolean isWithinZero(DecimalNumber number) {
        return $Math.abs(number: number) < value;
    }

    Boolean isWithinOneInSquaredSpace( DecimalNumber number ) {
        DecimalNumber min <- 1.0 - value;
        DecimalNumber max <- 1.0 + value;
        return ( ( min * min ) < number ) && ( number < ( max * max ) );
    }

    Boolean isWithinZeroInSquaredSpace( DecimalNumber number ) {
        return number < ( value * value );
    }
}