class Program {
  
  static void main() {
    $Clock.delay(duration: 0);
    $Clock.delay(duration: 1.5);

    TestEnum[] emptyArray <- new TestEnum[20];

    writeEnum();
    forLoop(array: new TestEnum[] { TestEnum.UP, TestEnum.DOWN });

    WholeNumber[] arrayInTweedle <- new WholeNumber[] { 0, 1, 2, 3, 4, 5 };
    WholeNumber range <- $Debug.getRangeFromTweedle(array: arrayInTweedle);
    $Debug.log(string: "Array from tweedle is " .. arrayInTweedle .. " with range " .. range);

    WholeNumber[] arrayFromInterop <- $Debug.generateArray(start: 0, end: -150);
    $Debug.log(string: "Array from interop is " .. arrayFromInterop);

    $Clock.callOnDelay(lambda: (DecimalNumber initial, DecimalNumber current) -> {
      $Debug.log(string: "This was called on a delay, starting at time " .. initial .. " and ending at time " .. current);
      return (current - initial);
    }, delay: 2);
  }

  static void writeEnum(TestEnum e <- TestEnum.DOWN) {
    $Debug.log(string: "" .. e);
  }

  static void forLoop(TestEnum[] array) {
    WholeNumber length <- array.length;
    $Debug.log(string: "Array length is " .. length);

    forEach(TestEnum i in array) {
      $Clock.delay(duration: 0.2);
      $Debug.log(string: "" .. i);
    }

  }
}