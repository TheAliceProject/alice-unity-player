class Program {

  TextString name;
  WholeNumber id <- 0;

  Program(TextString name, WholeNumber id <- 0) {
    this.name <- name;
  }

  TextString getName() {
    return name;
  }

  void execute() {
    // portions
    $Debug.log(string: "Portion");
    Portion p <- new Portion(number: 0.25);
    Portion clone <- new Portion(clone: p);
    Portion sum <- clone.plus(portion: new Portion(number: 0.5));
    $Debug.log(string: "Portion: " .. sum.value);

    // angles
    $Debug.log(string: "Angle");
    Angle angle <- new Angle(revolutions: 0.5);
    $Debug.log(string: "angle <- " .. angle);

    // AABB
    $Debug.log(string: "AxisAlignedBox");
    AxisAlignedBox box <- new AxisAlignedBox(minimum: new Position(x: -0.5, y: -0.5, z: -0.5), maximum: new Position(x: 0.5, y: 0.5, z: 0.5));
    $Debug.log(string: "box <- " .. box);

    // positions
    $Debug.log(string: "Position");
    Position pos <- new Position(x: 1, y: 2, z: 4);
    $Debug.log(string: "pos <- " .. pos);

    // direction
    $Debug.log(string: "Direction");
    Direction dir <- new Direction(x: 2, y: 5, z: 3);
    $Debug.log(string: "dir <- " .. dir);

    Direction right <- Direction.POSITIVE_X_AXIS;
    $Debug.log(string: "right <- " .. right);

    // Orientation
    $Debug.log(string: "Orientation");
    Orientation orientation <- new Orientation(direction: new Direction(x: 1, y: 0, z: 0), angle: new Angle(revolutions: 0.25));
    $Debug.dump(object: orientation);
  }
  
  static void main() {
    Program p <- new Program(name: "Primitives Test");
    $Debug.log(string: "Program name is " .. p.getName() .. " and id is " .. p.id);
    p.execute();
  }
}