class Scene extends SScene {
  Scene() {
    super();
  }
  
/*
  void initializeEventListeners() {
    this.addSceneActivationListener(listener: (SceneActivationEvent event)-> {
      this.myFirstMethod();
    });
  }
*/
  void myFirstMethod() {
  }
  //SGround ground <- new SGround();
  //SCamera camera <- new SCamera();
  Box box <- new Box();
  

  void performCustomSetup() {
    // Make adjustments to the starting scene, in a way not available in the Scene editor
    $Debug.log(string: this.getName() .. ": performCustomStetup");

    this.box.setPositionRelativeToVehicle(position: new Position(x: -0.5, y: 0.0, z: 0.0), duration: 0);
    this.box.setOrientationRelativeToVehicle(orientation: new Orientation(x: 0.0, y: 0.588, z: 0.0, w: -0.809), duration: 0);

    this.box.setOpacity(opacity: Portion.ZERO, duration: 1);
    this.box.setOpacity(opacity: Portion.ONE, duration: 1);

    Box box3 <- new Box();
    box3.setName(name: "box3");
    box3.setVehicle(vehicle: this);
    box3.setPositionRelativeToVehicle(position: new Position(x: 3.0, y: 2.0, z: 0.0), duration: 0);
    box3.setOrientationRelativeToVehicle(orientation: new Orientation(x: 0.0, y: 0.588, z: 0.0, w: 0.809), duration: 0);
    box3.setOpacity(opacity: Portion.ZERO, duration: 0);
    box3.setOpacity(opacity: Portion.ONE, duration: 0.5);

    Box box2 <- new Box();
    box2.setName(name: "box2");
    box2.setVehicle(vehicle: this);
    box2.setPositionRelativeToVehicle(position: new Position(x: 2.0, y: 0.0, z: 0.0), duration: 0);
    box2.setVehicle(vehicle: box3);
    box2.setOpacity(opacity: Portion.ZERO, duration: 0);
    box2.setOpacity(opacity: Portion.ONE, duration: 0.5);


    rollBox(box: box2, dir: RollDirection.RIGHT, asSeenBy: box2);
    rollBox(box: box2, dir: RollDirection.RIGHT, asSeenBy: box);
    rollBox(box: box2, dir: RollDirection.RIGHT, asSeenBy: box3);
      
    turnBox(box: box2, dir: TurnDirection.FORWARD, asSeenBy: box2);
    turnBox(box: box2, dir: TurnDirection.FORWARD, asSeenBy: box);
    turnBox(box: box2, dir: TurnDirection.FORWARD, asSeenBy: box3);

    turnBox(box: box2, dir: TurnDirection.LEFT, asSeenBy: box2);
    turnBox(box: box2, dir: TurnDirection.LEFT, asSeenBy: box);
    turnBox(box: box2, dir: TurnDirection.LEFT, asSeenBy: box3);
    

    this.box.setHeight(height: 3, dimensionPolicy: DimensionPolicy.PRESERVE_VOLUME);
    this.box.setHeight(height: 1, dimensionPolicy: DimensionPolicy.PRESERVE_VOLUME);

    
  }

  void rollBox(Box box, RollDirection dir, Box asSeenBy) {
    doTogether {
      doInOrder {
        asSeenBy.setPaint(paint: Color.RED);
        asSeenBy.setPaint(paint: Color.WHITE);
      }
      box.roll(direction: dir, amount: 1, duration: 2, asSeenBy: asSeenBy);
    }
  }

  void turnBox(Box box, TurnDirection dir, Box asSeenBy) {
    doTogether {
      doInOrder {
        asSeenBy.setPaint(paint: Color.RED);
        asSeenBy.setPaint(paint: Color.WHITE);
      }
      box.turn(direction: dir, amount: 1, duration: 2, asSeenBy: asSeenBy);
    }
  }

  // NOTE: All property settings should use a duration of 0
  void performGeneratedSetUp() {
    // DO NOT EDIT
    // This code is automatically generated.  Any work you perform in this method will be overwritten.
    // DO NOT EDIT
    //this.setAtmosphereColor(color: new Color(red: 0.0, green: 0.0941, blue: 0.294));
    //this.setFromAboveLightColor(color: Color.WHITE);
    //this.setFromBelowLightColor(color: new Color(red: 0.541, green: 0.0, blue: 0.125));
    //this.setFogDensity(density: 0.1);
    this.setName(name: "myScene");
    //this.ground.setPaint(paint: SurfaceAppearance.DARK_GRASS);
    //this.ground.setOpacity(opacity: 1.0);
    //this.ground.setName(name: "ground");
    //this.ground.setVehicle(vehicle: this);
    //this.camera.setName(name: "camera");
    //this.camera.setVehicle(vehicle: this);
    //this.camera.setOrientationRelativeToVehicle(orientation: new Orientation(x: 0.0, y: 0.995185, z: 0.0980144, w: 6.12323E-17));
    //this.camera.setPositionRelativeToVehicle(position: new Position(x: 9.61E-16, y: 1.56, z: -7.85));
    this.box.setPaint(paint: Color.WHITE, duration: 0);
    this.box.setOpacity(opacity: new Portion(portion: 1.0), duration: 0);
    this.box.setName(name: "box");
    this.box.setVehicle(vehicle: this);
    this.box.setOrientationRelativeToVehicle(orientation: new Orientation(x: 0.0, y: 0.0, z: 0.0, w:1), duration: 0);
    this.box.setPositionRelativeToVehicle(position: new Position(x: 0.0, y: 0.0, z: 0.0), duration: 0);
    this.box.setSize(size: new Size(width: 1.0, height: 1.0, depth: 1.0), duration: 0);
  }

  /*SGround getGround() {
    return this.ground;
  }
  SCamera getCamera() {
    return this.camera;
  }*/
  Box getBox() {
    return this.box;
  }
}