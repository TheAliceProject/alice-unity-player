class VantagePointProperty extends Property {
  VantagePointProperty(SThing owner, VantagePoint value) {
    super(owner: owner);
    this.value <- value;
  }

  Size getValue() {
    return this.value;
  }

  void setValue(VantagePoint value) {
    this.value <- value;
    $SceneGraph.updateProperty(owner: this.owner, property: this, value: value);
  }

  void applyTransformation(VantagePoint transformation, SThing asSeenBy) {
    // parent
    VantagePoint pi <- $SceneGraph.getInverseAbsoluteTransformation(thing: this.owner.vehicle);
    // viewer
    VantagePoint v <- $SceneGraph.getAbsoluteTransformation(thing: asSeenBy);
    // subject
    VantagePoint s <- $SceneGraph.getAbsoluteTransformation(thing: this.owner);

    VantagePoint m <- pi.multiply(other: v).multiply(other: transformation).multiply(other: v.inverse()).multiply(other: s);
    setValue(value: m);
  }

  void animatePosition(Position endValue, DecimalNumber duration, AnimationStyle animationStyle) {
    PositionTween tween <- new PositionTween(property: this, start: this.value.position, end: endValue);
    tween.animate(duration: duration, animationStyle: animationStyle);
  }

  void animateOrientation(Orientation endValue, DecimalNumber duration, AnimationStyle animationStyle) {
    OrientationTween tween <- new OrientationTween(property: this, start: this.value.orientation, end: endValue);
    tween.animate(duration: duration, animationStyle: animationStyle);
  }

  void animateRotation(Direction axis, Angle angle, SThing asSeenBy, DecimalNumber duration, AnimationStyle animationStyle) {
    ApplyRotationTween tween <- new ApplyRotationTween(property: this, axis: axis, angle: angle, asSeenBy: asSeenBy);
    tween.animate(duration: duration, animationStyle: animationStyle);
  }

  void animateTurnToFace(SThing target, DecimalNumber duration, AnimationStyle animationStyle) {
    // target position in owner space
    // subject
    //VantagePoint si <- $SceneGraph.getInverseAbsoluteTransformation(thing: owner);
    // target
    //VantagePoint t <- $SceneGraph.getAbsoluteTransformation(thing: target);
    //Position tp <- si.multiply(other: t).position;
    Position tp <- target.getVantagePoint(asSeenBy: owner).position;
    Direction toTarget <- new Direction(x: tp.x, y: 0, z: tp.z);

    Orientation end <- value.orientation;
    if (!Epsilon.REASONABLE.isWithin0InSquaredSpace(number: toTarget.lengthSquared)) {
      // in vehicle space
      Direction up <- Direction.POSITIVE_Y_AXIS.rotate(orientation: value.orientation);
      Direction newForward <- toTarget.rotate(orientation: value.orientation).normalize();
      end <- new Orientation(forward: newForward, up: up);
    }

    OrientationTween tween <- new OrientationTween(property: this, start: this.value.orientation, end: end);
    tween.animate(duration: duration, animationStyle: animationStyle);
  }

  @CompletelyHidden VantagePoint value;
}