class SThing {
  @hidden String name;
  @hidden SThing vehicle;

	@tuckedAway String getName() {
		return name;
	}

	@tuckedAway void setName( String newName ) {
		name <- newName ;
	}

	SThing getVehicle() {
	  return vehicle;
	}

  @hidden VantagePoint getVantagePoint( SThing entity ) {
    return VantagePoint.createInstance( transformation: getTransformation( target: entity ) );
  }

  void delay( Number duration ) {
    Primitive.delay( duration: duration );
  }

  void playAudio( AudioSource audioSource ) {
    Primitive.playAudio( resource: audioSource );
  }

  Boolean isCollidingWith( SThing other ) {
    return Primitive.isCollidingWith( target: other );
  }

  Boolean getBooleanFromUser( String message ) {
    return Primitive.getBooleanFromUser( message: message );
  }

  String getStringFromUser( String message ) {
    return Primitive.getStringFromUser( message: message );
  }

  DecimalNumber getDoubleFromUser( String message ) {
    return Primitive.getDoubleFromUser( message: message );
  }

  WholeNumber getIntegerFromUser( String message ) {
    return Primitive.getIntegerFromUser( message: message );
  }

  String toString() {
    if( name != null ) {
      return name;
    } else {
      return "unnamed " + Primitive.getClassName( instance: this );
    }
  }

  @hidden SScene getScene() {
    if ( vehicle == null ) {
      return null;
    } else {
      return vehicle.getScene();
    }
  }
}