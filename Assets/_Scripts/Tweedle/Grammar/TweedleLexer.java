// Generated from Assets/_Scripts/Tweedle/Grammar/TweedleLexer.g4 by ANTLR 4.7.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class TweedleLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		BOOLEAN=1, CLASS=2, COUNT_UP_TO=3, CONSTANT=4, DECIMAL_NUMBER=5, DO_IN_ORDER=6, 
		DO_TOGETHER=7, EACH=8, ELSE=9, ENUM=10, EXTENDS=11, FOR_EACH=12, EACH_TOGETHER=13, 
		HIDE=14, IF=15, IN=16, LOOP=17, MODELS=18, NEW=19, NUMBER=20, PRIMETIME=21, 
		RETURN=22, STATIC=23, STRING=24, SUPER=25, THIS=26, TUCKED_AWAY=27, VOID=28, 
		WHILE=29, WHOLE_NUMBER=30, DECIMAL_LITERAL=31, FLOAT_LITERAL=32, BOOL_LITERAL=33, 
		STRING_LITERAL=34, NULL_LITERAL=35, LPAREN=36, RPAREN=37, LBRACE=38, RBRACE=39, 
		LBRACK=40, RBRACK=41, SEMI=42, COMMA=43, DOT=44, ASSIGN=45, GT=46, LT=47, 
		BANG=48, TILDE=49, QUESTION=50, COLON=51, EQUAL=52, LE=53, GE=54, NOTEQUAL=55, 
		AND=56, OR=57, INC=58, DEC=59, ADD=60, SUB=61, MUL=62, DIV=63, BITAND=64, 
		BITOR=65, CARET=66, MOD=67, ADD_ASSIGN=68, SUB_ASSIGN=69, MUL_ASSIGN=70, 
		DIV_ASSIGN=71, AND_ASSIGN=72, OR_ASSIGN=73, XOR_ASSIGN=74, MOD_ASSIGN=75, 
		LSHIFT_ASSIGN=76, RSHIFT_ASSIGN=77, URSHIFT_ASSIGN=78, ARROW=79, COLONCOLON=80, 
		AT=81, ELLIPSIS=82, LARROW=83, WS=84, COMMENT=85, LINE_COMMENT=86, NODE_COMMENT=87, 
		IDENTIFIER=88;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"BOOLEAN", "CLASS", "COUNT_UP_TO", "CONSTANT", "DECIMAL_NUMBER", "DO_IN_ORDER", 
		"DO_TOGETHER", "EACH", "ELSE", "ENUM", "EXTENDS", "FOR_EACH", "EACH_TOGETHER", 
		"HIDE", "IF", "IN", "LOOP", "MODELS", "NEW", "NUMBER", "PRIMETIME", "RETURN", 
		"STATIC", "STRING", "SUPER", "THIS", "TUCKED_AWAY", "VOID", "WHILE", "WHOLE_NUMBER", 
		"DECIMAL_LITERAL", "FLOAT_LITERAL", "BOOL_LITERAL", "STRING_LITERAL", 
		"NULL_LITERAL", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", 
		"SEMI", "COMMA", "DOT", "ASSIGN", "GT", "LT", "BANG", "TILDE", "QUESTION", 
		"COLON", "EQUAL", "LE", "GE", "NOTEQUAL", "AND", "OR", "INC", "DEC", "ADD", 
		"SUB", "MUL", "DIV", "BITAND", "BITOR", "CARET", "MOD", "ADD_ASSIGN", 
		"SUB_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN", "AND_ASSIGN", "OR_ASSIGN", "XOR_ASSIGN", 
		"MOD_ASSIGN", "LSHIFT_ASSIGN", "RSHIFT_ASSIGN", "URSHIFT_ASSIGN", "ARROW", 
		"COLONCOLON", "AT", "ELLIPSIS", "LARROW", "WS", "COMMENT", "LINE_COMMENT", 
		"NODE_COMMENT", "IDENTIFIER", "ExponentPart", "EscapeSequence", "HexDigits", 
		"HexDigit", "Digits", "LetterOrDigit", "Letter"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'Boolean'", "'class'", "'countUpTo'", "'constant'", "'DecimalNumber'", 
		"'doInOrder'", "'doTogether'", "'each'", "'else'", "'enum'", "'extends'", 
		"'forEach'", "'eachTogether'", "'hidden'", "'if'", "'in'", "'loop'", "'models'", 
		"'new'", "'Number'", "'primetime'", "'return'", "'static'", "'String'", 
		"'super'", "'this'", "'tuckedAway'", "'void'", "'while'", "'WholeNumber'", 
		null, null, null, null, "'null'", "'('", "')'", "'{'", "'}'", "'['", "']'", 
		"';'", "','", "'.'", "'='", "'>'", "'<'", "'!'", "'~'", "'?'", "':'", 
		"'=='", "'<='", "'>='", "'!='", "'&&'", "'||'", "'++'", "'--'", "'+'", 
		"'-'", "'*'", "'/'", "'&'", "'|'", "'^'", "'%'", "'+='", "'-='", "'*='", 
		"'/='", "'&='", "'|='", "'^='", "'%='", "'<<='", "'>>='", "'>>>='", "'->'", 
		"'::'", "'@'", "'...'", "'<-'", null, null, null, "'**'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "BOOLEAN", "CLASS", "COUNT_UP_TO", "CONSTANT", "DECIMAL_NUMBER", 
		"DO_IN_ORDER", "DO_TOGETHER", "EACH", "ELSE", "ENUM", "EXTENDS", "FOR_EACH", 
		"EACH_TOGETHER", "HIDE", "IF", "IN", "LOOP", "MODELS", "NEW", "NUMBER", 
		"PRIMETIME", "RETURN", "STATIC", "STRING", "SUPER", "THIS", "TUCKED_AWAY", 
		"VOID", "WHILE", "WHOLE_NUMBER", "DECIMAL_LITERAL", "FLOAT_LITERAL", "BOOL_LITERAL", 
		"STRING_LITERAL", "NULL_LITERAL", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
		"LBRACK", "RBRACK", "SEMI", "COMMA", "DOT", "ASSIGN", "GT", "LT", "BANG", 
		"TILDE", "QUESTION", "COLON", "EQUAL", "LE", "GE", "NOTEQUAL", "AND", 
		"OR", "INC", "DEC", "ADD", "SUB", "MUL", "DIV", "BITAND", "BITOR", "CARET", 
		"MOD", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN", "AND_ASSIGN", 
		"OR_ASSIGN", "XOR_ASSIGN", "MOD_ASSIGN", "LSHIFT_ASSIGN", "RSHIFT_ASSIGN", 
		"URSHIFT_ASSIGN", "ARROW", "COLONCOLON", "AT", "ELLIPSIS", "LARROW", "WS", 
		"COMMENT", "LINE_COMMENT", "NODE_COMMENT", "IDENTIFIER"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public TweedleLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "TweedleLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2Z\u02ca\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_\4"+
		"`\t`\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3"+
		"\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6"+
		"\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3"+
		"\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t"+
		"\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16"+
		"\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17"+
		"\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22"+
		"\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25"+
		"\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\33"+
		"\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \5 \u01a5\n"+
		" \3 \6 \u01a8\n \r \16 \u01a9\3 \5 \u01ad\n \5 \u01af\n \3 \5 \u01b2\n"+
		" \3!\3!\3!\5!\u01b7\n!\3!\3!\5!\u01bb\n!\3!\5!\u01be\n!\3!\5!\u01c1\n"+
		"!\3!\3!\3!\5!\u01c6\n!\3!\5!\u01c9\n!\5!\u01cb\n!\3\"\3\"\3\"\3\"\3\""+
		"\3\"\3\"\3\"\3\"\5\"\u01d6\n\"\3#\3#\3#\7#\u01db\n#\f#\16#\u01de\13#\3"+
		"#\3#\3$\3$\3$\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,"+
		"\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3"+
		"\65\3\65\3\65\3\66\3\66\3\66\3\67\3\67\3\67\38\38\38\39\39\39\3:\3:\3"+
		":\3;\3;\3;\3<\3<\3<\3=\3=\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C\3C\3D\3D\3"+
		"E\3E\3E\3F\3F\3F\3G\3G\3G\3H\3H\3H\3I\3I\3I\3J\3J\3J\3K\3K\3K\3L\3L\3"+
		"L\3M\3M\3M\3M\3N\3N\3N\3N\3O\3O\3O\3O\3O\3P\3P\3P\3Q\3Q\3Q\3R\3R\3S\3"+
		"S\3S\3S\3T\3T\3T\3U\6U\u0264\nU\rU\16U\u0265\3U\3U\3V\3V\3V\3V\7V\u026e"+
		"\nV\fV\16V\u0271\13V\3V\3V\3V\3V\3V\3W\3W\3W\3W\7W\u027c\nW\fW\16W\u027f"+
		"\13W\3W\3W\3X\3X\3X\3Y\3Y\7Y\u0288\nY\fY\16Y\u028b\13Y\3Z\3Z\5Z\u028f"+
		"\nZ\3Z\3Z\3[\3[\3[\3[\5[\u0297\n[\3[\5[\u029a\n[\3[\3[\3[\6[\u029f\n["+
		"\r[\16[\u02a0\3[\3[\3[\3[\3[\5[\u02a8\n[\3\\\3\\\3\\\7\\\u02ad\n\\\f\\"+
		"\16\\\u02b0\13\\\3\\\5\\\u02b3\n\\\3]\3]\3^\3^\7^\u02b9\n^\f^\16^\u02bc"+
		"\13^\3^\5^\u02bf\n^\3_\3_\5_\u02c3\n_\3`\3`\3`\3`\5`\u02c9\n`\3\u026f"+
		"\2a\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36"+
		";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67"+
		"m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089F\u008bG\u008d"+
		"H\u008fI\u0091J\u0093K\u0095L\u0097M\u0099N\u009bO\u009dP\u009fQ\u00a1"+
		"R\u00a3S\u00a5T\u00a7U\u00a9V\u00abW\u00adX\u00afY\u00b1Z\u00b3\2\u00b5"+
		"\2\u00b7\2\u00b9\2\u00bb\2\u00bd\2\u00bf\2\3\2\24\3\2\63;\4\2NNnn\6\2"+
		"FFHHffhh\6\2\f\f\17\17$$^^\5\2\13\f\16\17\"\"\4\2\f\f\17\17\4\2GGgg\4"+
		"\2--//\n\2$$))^^ddhhppttvv\3\2\62\65\3\2\629\5\2\62;CHch\3\2\62;\4\2\62"+
		";aa\6\2&&C\\aac|\4\2\2\u0081\ud802\udc01\3\2\ud802\udc01\3\2\udc02\ue001"+
		"\2\u02e3\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2"+
		"\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
		"\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
		"\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
		"\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2"+
		"\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2"+
		"\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y"+
		"\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3"+
		"\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2"+
		"\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095"+
		"\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2"+
		"\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2\2\2\u00a7"+
		"\3\2\2\2\2\u00a9\3\2\2\2\2\u00ab\3\2\2\2\2\u00ad\3\2\2\2\2\u00af\3\2\2"+
		"\2\2\u00b1\3\2\2\2\3\u00c1\3\2\2\2\5\u00c9\3\2\2\2\7\u00cf\3\2\2\2\t\u00d9"+
		"\3\2\2\2\13\u00e2\3\2\2\2\r\u00f0\3\2\2\2\17\u00fa\3\2\2\2\21\u0105\3"+
		"\2\2\2\23\u010a\3\2\2\2\25\u010f\3\2\2\2\27\u0114\3\2\2\2\31\u011c\3\2"+
		"\2\2\33\u0124\3\2\2\2\35\u0131\3\2\2\2\37\u0138\3\2\2\2!\u013b\3\2\2\2"+
		"#\u013e\3\2\2\2%\u0143\3\2\2\2\'\u014a\3\2\2\2)\u014e\3\2\2\2+\u0155\3"+
		"\2\2\2-\u015f\3\2\2\2/\u0166\3\2\2\2\61\u016d\3\2\2\2\63\u0174\3\2\2\2"+
		"\65\u017a\3\2\2\2\67\u017f\3\2\2\29\u018a\3\2\2\2;\u018f\3\2\2\2=\u0195"+
		"\3\2\2\2?\u01ae\3\2\2\2A\u01ca\3\2\2\2C\u01d5\3\2\2\2E\u01d7\3\2\2\2G"+
		"\u01e1\3\2\2\2I\u01e6\3\2\2\2K\u01e8\3\2\2\2M\u01ea\3\2\2\2O\u01ec\3\2"+
		"\2\2Q\u01ee\3\2\2\2S\u01f0\3\2\2\2U\u01f2\3\2\2\2W\u01f4\3\2\2\2Y\u01f6"+
		"\3\2\2\2[\u01f8\3\2\2\2]\u01fa\3\2\2\2_\u01fc\3\2\2\2a\u01fe\3\2\2\2c"+
		"\u0200\3\2\2\2e\u0202\3\2\2\2g\u0204\3\2\2\2i\u0206\3\2\2\2k\u0209\3\2"+
		"\2\2m\u020c\3\2\2\2o\u020f\3\2\2\2q\u0212\3\2\2\2s\u0215\3\2\2\2u\u0218"+
		"\3\2\2\2w\u021b\3\2\2\2y\u021e\3\2\2\2{\u0220\3\2\2\2}\u0222\3\2\2\2\177"+
		"\u0224\3\2\2\2\u0081\u0226\3\2\2\2\u0083\u0228\3\2\2\2\u0085\u022a\3\2"+
		"\2\2\u0087\u022c\3\2\2\2\u0089\u022e\3\2\2\2\u008b\u0231\3\2\2\2\u008d"+
		"\u0234\3\2\2\2\u008f\u0237\3\2\2\2\u0091\u023a\3\2\2\2\u0093\u023d\3\2"+
		"\2\2\u0095\u0240\3\2\2\2\u0097\u0243\3\2\2\2\u0099\u0246\3\2\2\2\u009b"+
		"\u024a\3\2\2\2\u009d\u024e\3\2\2\2\u009f\u0253\3\2\2\2\u00a1\u0256\3\2"+
		"\2\2\u00a3\u0259\3\2\2\2\u00a5\u025b\3\2\2\2\u00a7\u025f\3\2\2\2\u00a9"+
		"\u0263\3\2\2\2\u00ab\u0269\3\2\2\2\u00ad\u0277\3\2\2\2\u00af\u0282\3\2"+
		"\2\2\u00b1\u0285\3\2\2\2\u00b3\u028c\3\2\2\2\u00b5\u02a7\3\2\2\2\u00b7"+
		"\u02a9\3\2\2\2\u00b9\u02b4\3\2\2\2\u00bb\u02b6\3\2\2\2\u00bd\u02c2\3\2"+
		"\2\2\u00bf\u02c8\3\2\2\2\u00c1\u00c2\7D\2\2\u00c2\u00c3\7q\2\2\u00c3\u00c4"+
		"\7q\2\2\u00c4\u00c5\7n\2\2\u00c5\u00c6\7g\2\2\u00c6\u00c7\7c\2\2\u00c7"+
		"\u00c8\7p\2\2\u00c8\4\3\2\2\2\u00c9\u00ca\7e\2\2\u00ca\u00cb\7n\2\2\u00cb"+
		"\u00cc\7c\2\2\u00cc\u00cd\7u\2\2\u00cd\u00ce\7u\2\2\u00ce\6\3\2\2\2\u00cf"+
		"\u00d0\7e\2\2\u00d0\u00d1\7q\2\2\u00d1\u00d2\7w\2\2\u00d2\u00d3\7p\2\2"+
		"\u00d3\u00d4\7v\2\2\u00d4\u00d5\7W\2\2\u00d5\u00d6\7r\2\2\u00d6\u00d7"+
		"\7V\2\2\u00d7\u00d8\7q\2\2\u00d8\b\3\2\2\2\u00d9\u00da\7e\2\2\u00da\u00db"+
		"\7q\2\2\u00db\u00dc\7p\2\2\u00dc\u00dd\7u\2\2\u00dd\u00de\7v\2\2\u00de"+
		"\u00df\7c\2\2\u00df\u00e0\7p\2\2\u00e0\u00e1\7v\2\2\u00e1\n\3\2\2\2\u00e2"+
		"\u00e3\7F\2\2\u00e3\u00e4\7g\2\2\u00e4\u00e5\7e\2\2\u00e5\u00e6\7k\2\2"+
		"\u00e6\u00e7\7o\2\2\u00e7\u00e8\7c\2\2\u00e8\u00e9\7n\2\2\u00e9\u00ea"+
		"\7P\2\2\u00ea\u00eb\7w\2\2\u00eb\u00ec\7o\2\2\u00ec\u00ed\7d\2\2\u00ed"+
		"\u00ee\7g\2\2\u00ee\u00ef\7t\2\2\u00ef\f\3\2\2\2\u00f0\u00f1\7f\2\2\u00f1"+
		"\u00f2\7q\2\2\u00f2\u00f3\7K\2\2\u00f3\u00f4\7p\2\2\u00f4\u00f5\7Q\2\2"+
		"\u00f5\u00f6\7t\2\2\u00f6\u00f7\7f\2\2\u00f7\u00f8\7g\2\2\u00f8\u00f9"+
		"\7t\2\2\u00f9\16\3\2\2\2\u00fa\u00fb\7f\2\2\u00fb\u00fc\7q\2\2\u00fc\u00fd"+
		"\7V\2\2\u00fd\u00fe\7q\2\2\u00fe\u00ff\7i\2\2\u00ff\u0100\7g\2\2\u0100"+
		"\u0101\7v\2\2\u0101\u0102\7j\2\2\u0102\u0103\7g\2\2\u0103\u0104\7t\2\2"+
		"\u0104\20\3\2\2\2\u0105\u0106\7g\2\2\u0106\u0107\7c\2\2\u0107\u0108\7"+
		"e\2\2\u0108\u0109\7j\2\2\u0109\22\3\2\2\2\u010a\u010b\7g\2\2\u010b\u010c"+
		"\7n\2\2\u010c\u010d\7u\2\2\u010d\u010e\7g\2\2\u010e\24\3\2\2\2\u010f\u0110"+
		"\7g\2\2\u0110\u0111\7p\2\2\u0111\u0112\7w\2\2\u0112\u0113\7o\2\2\u0113"+
		"\26\3\2\2\2\u0114\u0115\7g\2\2\u0115\u0116\7z\2\2\u0116\u0117\7v\2\2\u0117"+
		"\u0118\7g\2\2\u0118\u0119\7p\2\2\u0119\u011a\7f\2\2\u011a\u011b\7u\2\2"+
		"\u011b\30\3\2\2\2\u011c\u011d\7h\2\2\u011d\u011e\7q\2\2\u011e\u011f\7"+
		"t\2\2\u011f\u0120\7G\2\2\u0120\u0121\7c\2\2\u0121\u0122\7e\2\2\u0122\u0123"+
		"\7j\2\2\u0123\32\3\2\2\2\u0124\u0125\7g\2\2\u0125\u0126\7c\2\2\u0126\u0127"+
		"\7e\2\2\u0127\u0128\7j\2\2\u0128\u0129\7V\2\2\u0129\u012a\7q\2\2\u012a"+
		"\u012b\7i\2\2\u012b\u012c\7g\2\2\u012c\u012d\7v\2\2\u012d\u012e\7j\2\2"+
		"\u012e\u012f\7g\2\2\u012f\u0130\7t\2\2\u0130\34\3\2\2\2\u0131\u0132\7"+
		"j\2\2\u0132\u0133\7k\2\2\u0133\u0134\7f\2\2\u0134\u0135\7f\2\2\u0135\u0136"+
		"\7g\2\2\u0136\u0137\7p\2\2\u0137\36\3\2\2\2\u0138\u0139\7k\2\2\u0139\u013a"+
		"\7h\2\2\u013a \3\2\2\2\u013b\u013c\7k\2\2\u013c\u013d\7p\2\2\u013d\"\3"+
		"\2\2\2\u013e\u013f\7n\2\2\u013f\u0140\7q\2\2\u0140\u0141\7q\2\2\u0141"+
		"\u0142\7r\2\2\u0142$\3\2\2\2\u0143\u0144\7o\2\2\u0144\u0145\7q\2\2\u0145"+
		"\u0146\7f\2\2\u0146\u0147\7g\2\2\u0147\u0148\7n\2\2\u0148\u0149\7u\2\2"+
		"\u0149&\3\2\2\2\u014a\u014b\7p\2\2\u014b\u014c\7g\2\2\u014c\u014d\7y\2"+
		"\2\u014d(\3\2\2\2\u014e\u014f\7P\2\2\u014f\u0150\7w\2\2\u0150\u0151\7"+
		"o\2\2\u0151\u0152\7d\2\2\u0152\u0153\7g\2\2\u0153\u0154\7t\2\2\u0154*"+
		"\3\2\2\2\u0155\u0156\7r\2\2\u0156\u0157\7t\2\2\u0157\u0158\7k\2\2\u0158"+
		"\u0159\7o\2\2\u0159\u015a\7g\2\2\u015a\u015b\7v\2\2\u015b\u015c\7k\2\2"+
		"\u015c\u015d\7o\2\2\u015d\u015e\7g\2\2\u015e,\3\2\2\2\u015f\u0160\7t\2"+
		"\2\u0160\u0161\7g\2\2\u0161\u0162\7v\2\2\u0162\u0163\7w\2\2\u0163\u0164"+
		"\7t\2\2\u0164\u0165\7p\2\2\u0165.\3\2\2\2\u0166\u0167\7u\2\2\u0167\u0168"+
		"\7v\2\2\u0168\u0169\7c\2\2\u0169\u016a\7v\2\2\u016a\u016b\7k\2\2\u016b"+
		"\u016c\7e\2\2\u016c\60\3\2\2\2\u016d\u016e\7U\2\2\u016e\u016f\7v\2\2\u016f"+
		"\u0170\7t\2\2\u0170\u0171\7k\2\2\u0171\u0172\7p\2\2\u0172\u0173\7i\2\2"+
		"\u0173\62\3\2\2\2\u0174\u0175\7u\2\2\u0175\u0176\7w\2\2\u0176\u0177\7"+
		"r\2\2\u0177\u0178\7g\2\2\u0178\u0179\7t\2\2\u0179\64\3\2\2\2\u017a\u017b"+
		"\7v\2\2\u017b\u017c\7j\2\2\u017c\u017d\7k\2\2\u017d\u017e\7u\2\2\u017e"+
		"\66\3\2\2\2\u017f\u0180\7v\2\2\u0180\u0181\7w\2\2\u0181\u0182\7e\2\2\u0182"+
		"\u0183\7m\2\2\u0183\u0184\7g\2\2\u0184\u0185\7f\2\2\u0185\u0186\7C\2\2"+
		"\u0186\u0187\7y\2\2\u0187\u0188\7c\2\2\u0188\u0189\7{\2\2\u01898\3\2\2"+
		"\2\u018a\u018b\7x\2\2\u018b\u018c\7q\2\2\u018c\u018d\7k\2\2\u018d\u018e"+
		"\7f\2\2\u018e:\3\2\2\2\u018f\u0190\7y\2\2\u0190\u0191\7j\2\2\u0191\u0192"+
		"\7k\2\2\u0192\u0193\7n\2\2\u0193\u0194\7g\2\2\u0194<\3\2\2\2\u0195\u0196"+
		"\7Y\2\2\u0196\u0197\7j\2\2\u0197\u0198\7q\2\2\u0198\u0199\7n\2\2\u0199"+
		"\u019a\7g\2\2\u019a\u019b\7P\2\2\u019b\u019c\7w\2\2\u019c\u019d\7o\2\2"+
		"\u019d\u019e\7d\2\2\u019e\u019f\7g\2\2\u019f\u01a0\7t\2\2\u01a0>\3\2\2"+
		"\2\u01a1\u01af\7\62\2\2\u01a2\u01ac\t\2\2\2\u01a3\u01a5\5\u00bb^\2\u01a4"+
		"\u01a3\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a5\u01ad\3\2\2\2\u01a6\u01a8\7a"+
		"\2\2\u01a7\u01a6\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9\u01a7\3\2\2\2\u01a9"+
		"\u01aa\3\2\2\2\u01aa\u01ab\3\2\2\2\u01ab\u01ad\5\u00bb^\2\u01ac\u01a4"+
		"\3\2\2\2\u01ac\u01a7\3\2\2\2\u01ad\u01af\3\2\2\2\u01ae\u01a1\3\2\2\2\u01ae"+
		"\u01a2\3\2\2\2\u01af\u01b1\3\2\2\2\u01b0\u01b2\t\3\2\2\u01b1\u01b0\3\2"+
		"\2\2\u01b1\u01b2\3\2\2\2\u01b2@\3\2\2\2\u01b3\u01b4\5\u00bb^\2\u01b4\u01b6"+
		"\7\60\2\2\u01b5\u01b7\5\u00bb^\2\u01b6\u01b5\3\2\2\2\u01b6\u01b7\3\2\2"+
		"\2\u01b7\u01bb\3\2\2\2\u01b8\u01b9\7\60\2\2\u01b9\u01bb\5\u00bb^\2\u01ba"+
		"\u01b3\3\2\2\2\u01ba\u01b8\3\2\2\2\u01bb\u01bd\3\2\2\2\u01bc\u01be\5\u00b3"+
		"Z\2\u01bd\u01bc\3\2\2\2\u01bd\u01be\3\2\2\2\u01be\u01c0\3\2\2\2\u01bf"+
		"\u01c1\t\4\2\2\u01c0\u01bf\3\2\2\2\u01c0\u01c1\3\2\2\2\u01c1\u01cb\3\2"+
		"\2\2\u01c2\u01c8\5\u00bb^\2\u01c3\u01c5\5\u00b3Z\2\u01c4\u01c6\t\4\2\2"+
		"\u01c5\u01c4\3\2\2\2\u01c5\u01c6\3\2\2\2\u01c6\u01c9\3\2\2\2\u01c7\u01c9"+
		"\t\4\2\2\u01c8\u01c3\3\2\2\2\u01c8\u01c7\3\2\2\2\u01c9\u01cb\3\2\2\2\u01ca"+
		"\u01ba\3\2\2\2\u01ca\u01c2\3\2\2\2\u01cbB\3\2\2\2\u01cc\u01cd\7v\2\2\u01cd"+
		"\u01ce\7t\2\2\u01ce\u01cf\7w\2\2\u01cf\u01d6\7g\2\2\u01d0\u01d1\7h\2\2"+
		"\u01d1\u01d2\7c\2\2\u01d2\u01d3\7n\2\2\u01d3\u01d4\7u\2\2\u01d4\u01d6"+
		"\7g\2\2\u01d5\u01cc\3\2\2\2\u01d5\u01d0\3\2\2\2\u01d6D\3\2\2\2\u01d7\u01dc"+
		"\7$\2\2\u01d8\u01db\n\5\2\2\u01d9\u01db\5\u00b5[\2\u01da\u01d8\3\2\2\2"+
		"\u01da\u01d9\3\2\2\2\u01db\u01de\3\2\2\2\u01dc\u01da\3\2\2\2\u01dc\u01dd"+
		"\3\2\2\2\u01dd\u01df\3\2\2\2\u01de\u01dc\3\2\2\2\u01df\u01e0\7$\2\2\u01e0"+
		"F\3\2\2\2\u01e1\u01e2\7p\2\2\u01e2\u01e3\7w\2\2\u01e3\u01e4\7n\2\2\u01e4"+
		"\u01e5\7n\2\2\u01e5H\3\2\2\2\u01e6\u01e7\7*\2\2\u01e7J\3\2\2\2\u01e8\u01e9"+
		"\7+\2\2\u01e9L\3\2\2\2\u01ea\u01eb\7}\2\2\u01ebN\3\2\2\2\u01ec\u01ed\7"+
		"\177\2\2\u01edP\3\2\2\2\u01ee\u01ef\7]\2\2\u01efR\3\2\2\2\u01f0\u01f1"+
		"\7_\2\2\u01f1T\3\2\2\2\u01f2\u01f3\7=\2\2\u01f3V\3\2\2\2\u01f4\u01f5\7"+
		".\2\2\u01f5X\3\2\2\2\u01f6\u01f7\7\60\2\2\u01f7Z\3\2\2\2\u01f8\u01f9\7"+
		"?\2\2\u01f9\\\3\2\2\2\u01fa\u01fb\7@\2\2\u01fb^\3\2\2\2\u01fc\u01fd\7"+
		">\2\2\u01fd`\3\2\2\2\u01fe\u01ff\7#\2\2\u01ffb\3\2\2\2\u0200\u0201\7\u0080"+
		"\2\2\u0201d\3\2\2\2\u0202\u0203\7A\2\2\u0203f\3\2\2\2\u0204\u0205\7<\2"+
		"\2\u0205h\3\2\2\2\u0206\u0207\7?\2\2\u0207\u0208\7?\2\2\u0208j\3\2\2\2"+
		"\u0209\u020a\7>\2\2\u020a\u020b\7?\2\2\u020bl\3\2\2\2\u020c\u020d\7@\2"+
		"\2\u020d\u020e\7?\2\2\u020en\3\2\2\2\u020f\u0210\7#\2\2\u0210\u0211\7"+
		"?\2\2\u0211p\3\2\2\2\u0212\u0213\7(\2\2\u0213\u0214\7(\2\2\u0214r\3\2"+
		"\2\2\u0215\u0216\7~\2\2\u0216\u0217\7~\2\2\u0217t\3\2\2\2\u0218\u0219"+
		"\7-\2\2\u0219\u021a\7-\2\2\u021av\3\2\2\2\u021b\u021c\7/\2\2\u021c\u021d"+
		"\7/\2\2\u021dx\3\2\2\2\u021e\u021f\7-\2\2\u021fz\3\2\2\2\u0220\u0221\7"+
		"/\2\2\u0221|\3\2\2\2\u0222\u0223\7,\2\2\u0223~\3\2\2\2\u0224\u0225\7\61"+
		"\2\2\u0225\u0080\3\2\2\2\u0226\u0227\7(\2\2\u0227\u0082\3\2\2\2\u0228"+
		"\u0229\7~\2\2\u0229\u0084\3\2\2\2\u022a\u022b\7`\2\2\u022b\u0086\3\2\2"+
		"\2\u022c\u022d\7\'\2\2\u022d\u0088\3\2\2\2\u022e\u022f\7-\2\2\u022f\u0230"+
		"\7?\2\2\u0230\u008a\3\2\2\2\u0231\u0232\7/\2\2\u0232\u0233\7?\2\2\u0233"+
		"\u008c\3\2\2\2\u0234\u0235\7,\2\2\u0235\u0236\7?\2\2\u0236\u008e\3\2\2"+
		"\2\u0237\u0238\7\61\2\2\u0238\u0239\7?\2\2\u0239\u0090\3\2\2\2\u023a\u023b"+
		"\7(\2\2\u023b\u023c\7?\2\2\u023c\u0092\3\2\2\2\u023d\u023e\7~\2\2\u023e"+
		"\u023f\7?\2\2\u023f\u0094\3\2\2\2\u0240\u0241\7`\2\2\u0241\u0242\7?\2"+
		"\2\u0242\u0096\3\2\2\2\u0243\u0244\7\'\2\2\u0244\u0245\7?\2\2\u0245\u0098"+
		"\3\2\2\2\u0246\u0247\7>\2\2\u0247\u0248\7>\2\2\u0248\u0249\7?\2\2\u0249"+
		"\u009a\3\2\2\2\u024a\u024b\7@\2\2\u024b\u024c\7@\2\2\u024c\u024d\7?\2"+
		"\2\u024d\u009c\3\2\2\2\u024e\u024f\7@\2\2\u024f\u0250\7@\2\2\u0250\u0251"+
		"\7@\2\2\u0251\u0252\7?\2\2\u0252\u009e\3\2\2\2\u0253\u0254\7/\2\2\u0254"+
		"\u0255\7@\2\2\u0255\u00a0\3\2\2\2\u0256\u0257\7<\2\2\u0257\u0258\7<\2"+
		"\2\u0258\u00a2\3\2\2\2\u0259\u025a\7B\2\2\u025a\u00a4\3\2\2\2\u025b\u025c"+
		"\7\60\2\2\u025c\u025d\7\60\2\2\u025d\u025e\7\60\2\2\u025e\u00a6\3\2\2"+
		"\2\u025f\u0260\7>\2\2\u0260\u0261\7/\2\2\u0261\u00a8\3\2\2\2\u0262\u0264"+
		"\t\6\2\2\u0263\u0262\3\2\2\2\u0264\u0265\3\2\2\2\u0265\u0263\3\2\2\2\u0265"+
		"\u0266\3\2\2\2\u0266\u0267\3\2\2\2\u0267\u0268\bU\2\2\u0268\u00aa\3\2"+
		"\2\2\u0269\u026a\7\61\2\2\u026a\u026b\7,\2\2\u026b\u026f\3\2\2\2\u026c"+
		"\u026e\13\2\2\2\u026d\u026c\3\2\2\2\u026e\u0271\3\2\2\2\u026f\u0270\3"+
		"\2\2\2\u026f\u026d\3\2\2\2\u0270\u0272\3\2\2\2\u0271\u026f\3\2\2\2\u0272"+
		"\u0273\7,\2\2\u0273\u0274\7\61\2\2\u0274\u0275\3\2\2\2\u0275\u0276\bV"+
		"\2\2\u0276\u00ac\3\2\2\2\u0277\u0278\7\61\2\2\u0278\u0279\7\61\2\2\u0279"+
		"\u027d\3\2\2\2\u027a\u027c\n\7\2\2\u027b\u027a\3\2\2\2\u027c\u027f\3\2"+
		"\2\2\u027d\u027b\3\2\2\2\u027d\u027e\3\2\2\2\u027e\u0280\3\2\2\2\u027f"+
		"\u027d\3\2\2\2\u0280\u0281\bW\2\2\u0281\u00ae\3\2\2\2\u0282\u0283\7,\2"+
		"\2\u0283\u0284\7,\2\2\u0284\u00b0\3\2\2\2\u0285\u0289\5\u00bf`\2\u0286"+
		"\u0288\5\u00bd_\2\u0287\u0286\3\2\2\2\u0288\u028b\3\2\2\2\u0289\u0287"+
		"\3\2\2\2\u0289\u028a\3\2\2\2\u028a\u00b2\3\2\2\2\u028b\u0289\3\2\2\2\u028c"+
		"\u028e\t\b\2\2\u028d\u028f\t\t\2\2\u028e\u028d\3\2\2\2\u028e\u028f\3\2"+
		"\2\2\u028f\u0290\3\2\2\2\u0290\u0291\5\u00bb^\2\u0291\u00b4\3\2\2\2\u0292"+
		"\u0293\7^\2\2\u0293\u02a8\t\n\2\2\u0294\u0299\7^\2\2\u0295\u0297\t\13"+
		"\2\2\u0296\u0295\3\2\2\2\u0296\u0297\3\2\2\2\u0297\u0298\3\2\2\2\u0298"+
		"\u029a\t\f\2\2\u0299\u0296\3\2\2\2\u0299\u029a\3\2\2\2\u029a\u029b\3\2"+
		"\2\2\u029b\u02a8\t\f\2\2\u029c\u029e\7^\2\2\u029d\u029f\7w\2\2\u029e\u029d"+
		"\3\2\2\2\u029f\u02a0\3\2\2\2\u02a0\u029e\3\2\2\2\u02a0\u02a1\3\2\2\2\u02a1"+
		"\u02a2\3\2\2\2\u02a2\u02a3\5\u00b9]\2\u02a3\u02a4\5\u00b9]\2\u02a4\u02a5"+
		"\5\u00b9]\2\u02a5\u02a6\5\u00b9]\2\u02a6\u02a8\3\2\2\2\u02a7\u0292\3\2"+
		"\2\2\u02a7\u0294\3\2\2\2\u02a7\u029c\3\2\2\2\u02a8\u00b6\3\2\2\2\u02a9"+
		"\u02b2\5\u00b9]\2\u02aa\u02ad\5\u00b9]\2\u02ab\u02ad\7a\2\2\u02ac\u02aa"+
		"\3\2\2\2\u02ac\u02ab\3\2\2\2\u02ad\u02b0\3\2\2\2\u02ae\u02ac\3\2\2\2\u02ae"+
		"\u02af\3\2\2\2\u02af\u02b1\3\2\2\2\u02b0\u02ae\3\2\2\2\u02b1\u02b3\5\u00b9"+
		"]\2\u02b2\u02ae\3\2\2\2\u02b2\u02b3\3\2\2\2\u02b3\u00b8\3\2\2\2\u02b4"+
		"\u02b5\t\r\2\2\u02b5\u00ba\3\2\2\2\u02b6\u02be\t\16\2\2\u02b7\u02b9\t"+
		"\17\2\2\u02b8\u02b7\3\2\2\2\u02b9\u02bc\3\2\2\2\u02ba\u02b8\3\2\2\2\u02ba"+
		"\u02bb\3\2\2\2\u02bb\u02bd\3\2\2\2\u02bc\u02ba\3\2\2\2\u02bd\u02bf\t\16"+
		"\2\2\u02be\u02ba\3\2\2\2\u02be\u02bf\3\2\2\2\u02bf\u00bc\3\2\2\2\u02c0"+
		"\u02c3\5\u00bf`\2\u02c1\u02c3\t\16\2\2\u02c2\u02c0\3\2\2\2\u02c2\u02c1"+
		"\3\2\2\2\u02c3\u00be\3\2\2\2\u02c4\u02c9\t\20\2\2\u02c5\u02c9\n\21\2\2"+
		"\u02c6\u02c7\t\22\2\2\u02c7\u02c9\t\23\2\2\u02c8\u02c4\3\2\2\2\u02c8\u02c5"+
		"\3\2\2\2\u02c8\u02c6\3\2\2\2\u02c9\u00c0\3\2\2\2\"\2\u01a4\u01a9\u01ac"+
		"\u01ae\u01b1\u01b6\u01ba\u01bd\u01c0\u01c5\u01c8\u01ca\u01d5\u01da\u01dc"+
		"\u0265\u026f\u027d\u0289\u028e\u0296\u0299\u02a0\u02a7\u02ac\u02ae\u02b2"+
		"\u02ba\u02be\u02c2\u02c8\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}